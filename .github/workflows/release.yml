name: Release
on:
    push:
        tags:
            - '*'


jobs:
    release:
        runs-on: ubuntu-24.04
        permissions:
            contents: write

        steps:
            - uses: actions/checkout@v3

            - name: create release
              uses: ncipollo/release-action@v1




    push_proxy_http_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qproxy'
          context: './proxy'
          file: './proxy/Http.Dockerfile'

    push_proxy_http_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qproxy'
          context: './proxy'
          file: './proxy/Http.Dockerfile'
    
    
    
    
    push_proxy_https_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qproxy-https'
          context: './proxy'
          file: './proxy/Https.Dockerfile'

    push_proxy_https_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qproxy-https'
          context: './proxy'
          file: './proxy/Https.Dockerfile'




    push_database_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qdb'
          context: './server/database'
          file: './server/database/Dockerfile'

    push_database_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qdb'
          context: './server/database'
          file: './server/database/Dockerfile'






    push_jobs_server_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qJobsServer'
          context: './server'
          file: './server/jobsServer.Dockerfile'

    push_jobs_server_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qJobsServer'
          context: './server'
          file: './server/jobsServer.Dockerfile'





    push_api_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qApi'
          context: './server'
          file: './server/restAPI.Dockerfile'

    push_api_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qApi'
          context: './server'
          file: './server/restAPI.Dockerfile'





    push_worker_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qWorker'
          context: './server/worker'
          file: './server/worker/Dockerfile'

    push_worker_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qWorker'
          context: './server/worker'
          file: './server/worker/Dockerfile'



    push_janitor_dockerhub:
      permissions:
          packages: write
          contents: read
          attestations: write
          id-token: write

      uses: ./.github/workflows/dockerhub-publish.yml
      secrets: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
      with:
          image_name: 'qJanitor'
          context: './janitor'
          file: './janitor/Dockerfile'

    push_janitor_ghcr:
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

      uses: ./.github/workflows/ghcr-publish.yml
      secrets: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          image_name: 'qJanitor'
          context: './janitor'
          file: './janitor/Dockerfile'


    test-dockerhub-production-compose-file-http:
        needs: [push_api_dockerhub, push_database_dockerhub, push_jobs_server_dockerhub,   push_worker_dockerhub, push_proxy_http_dockerhub ]
        uses: ./.github/workflows/compose-test.yml
        with:
          file: './compose.yml'
    
    test-dockerhub-production-compose-file-https:
        needs: [push_api_dockerhub, push_database_dockerhub, push_jobs_server_dockerhub,   push_worker_dockerhub, push_proxy_https_dockerhub ]
        uses: ./.github/workflows/compose-test.yml
        with:
          file: './compose-https.yml'


    test-ghcr-production-compose-file-http:
        needs: [push_api_ghcr, push_database_ghcr, push_jobs_server_ghcr, push_worker_ghcr, push_proxy_http_ghcr]
        uses: ./.github/workflows/compose-test.yml
        with:
          file: './ghcr-prod-compose.yml'

    test-ghcr-production-compose-file-https:
        needs: [push_api_ghcr, push_database_ghcr, push_jobs_server_ghcr, push_worker_ghcr, push_proxy_https_ghcr]
        uses: ./.github/workflows/compose-test.yml
        with:
          file: './ghcr-prod-compose-https.yml'