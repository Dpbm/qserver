name: Test parts

on: [push]

jobs:

    proxy:
      runs-on: ubuntu-24.04

      steps:
        - uses: actions/checkout@v4

        - name: Run proxy
          run: docker compose up -d --build proxy

        - name: Get Dev dependencies
          run: |
                chmod +x install-system-dev-dependencies.sh && \
                ./install-system-dev-dependencies.sh

        - name: Run tests
          uses: nick-fields/retry@v3
          with:
            timeout_seconds: 40
            retry_wait_seconds: 30
            max_attempts: 3
            command: cd ./proxy && \
                chmod +x test.sh && \
                bash -c "PATH=$HOME/go-binaries/bin:$PATH ./test.sh"                

    database:
      runs-on: ubuntu-24.04

      steps:
        - uses: actions/checkout@v4

        - name: Run database
          run: docker compose up -d --build db

        - name: Test status
          timeout-minutes: 1
          run: |
              chmod +x check-postgres-status-for-ci.sh && \
              ./check-postgres-status-for-ci.sh

    api:
        runs-on: ubuntu-24.04

        steps:
            - uses: actions/checkout@v4

            - name: Setup Go 1.23.5
              uses: actions/setup-go@v5
              with:
                  go-version: '1.23.5'

            - name: setup
              working-directory: ./server/restAPI
              run: |
                  go mod download && 
                  go mod verify

            - name: build
              working-directory: ./server/restAPI
              run: go build

            - name: Run tests
              working-directory: ./server/restAPI
              run: go test ./test

    worker:
        name: Run worker tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                version:
                    - '3.12'
                    - '3.11'
                    - '3.10'
                os:
                    - ubuntu-20.04

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.version }}

            - name: install dependencies
              working-directory: ./server/worker
              run: |
                  pip install -r requirements.txt -r dev-requirements.txt

            - name: Run tox checks
              working-directory: ./server/worker
              run: tox
