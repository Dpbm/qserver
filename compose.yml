services:
    db:
        container_name: postgres-db
        hostname: postgresInstance #https://stackoverflow.com/questions/29924843/how-do-i-set-hostname-in-docker-compose
        build:
            context: ./server/database/
            dockerfile: Dockerfile
        restart: always
        env_file:
            - ./postgres.env
            - ./db.env
        ports:
            - '5432:5432'
        volumes:
            # https://stackoverflow.com/questions/41637505/how-to-persist-data-in-a-dockerized-postgres-database-using-volumes
            - data:/var/lib/postgresql/data
            - postgres:/var/run/postgresql
            - qasm:/qasm
    queue-handler:
        container_name: rabbitmq
        hostname: rabbitmqInstance
        image: rabbitmq:4.0.5-alpine
        restart: always
        ports:
            - '5672:5672'
            - '15672:15672'

    jobs-server:
        container_name: jobs-server
        build:
            context: ./server/jobsServer/
            dockerfile: Dockerfile
        ports:
            - '50051:50051'
        depends_on:
            - db
            - queue-handler
        env_file:
            - ./db.env
            - ./rabbitmq.env
        environment:
            HOST: 0.0.0.0
            PORT: 50051
            QASM_PATH: /qasm
        restart: always
        volumes:
            - qasm:/qasm

    workers:
        build:
            context: ./server/worker
            dockerfile: Dockerfile
        depends_on:
            - db
            - queue-handler
            - jobs-server
        deploy:
            mode: replicated
            replicas: 4
        restart: always
        env_file:
            - ./rabbitmq.env
            - ./db.env
        volumes:
            - qasm:/qasm

    api:
        container_name: api
        build:
            context: ./server/restAPI
            dockerfile: Dockerfile
        depends_on:
            - db
        ports:
            - '3000:3000'
        restart: always
        env_file:
            - ./db.env
        environment:
            GIN_MODE: debug
            PORT: 3000

volumes:
    data:
        external: false
    postgres:
        external: false
    qasm:
        external: false
